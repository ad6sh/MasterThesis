# Import libraries
import matplotlib.pyplot as plt
import numpy as np
import statistics
  
# Creating dataset
client_total_lookup_time=[388265, 391524, 393558, 389901, 388753, 385789, 390983, 393536, 391580, 387856, 390235, 388688, 389088, 390871, 392173, 390033, 394228, 390792, 388211, 384388, 391916, 402871, 388740, 387400, 388697, 394389, 390312, 389666, 385726, 397355, 390386, 390886, 390839, 388511, 388531, 390406, 392858, 393149, 387058, 392598, 389296, 385553, 395636, 392425, 393316, 392028, 386983, 393877, 391408, 382643, 386368, 388982, 392670, 387543, 391811, 385805, 395140, 388700, 390760, 389926, 387866, 398194, 386186, 389575, 395709, 388105, 396405, 390488, 393085, 385792, 387697, 395240, 384773, 389867, 387044, 387217, 391520, 385965, 388570, 385853, 391370, 390459, 391080, 389439, 385524, 383033, 388440, 400461, 394131, 388227, 392252, 389466, 391299, 391156, 396639, 392032, 386478, 389150, 390320, 391789]
client_prepare_rqst=[ 64,  65,  65,  65,  135,  86,  65,  65,  65,  64,  64,  64,  64,  65,  65,  65,  65,  64,  65,  87,  64,  65,  64,  64,  65,  65,  65,  65,  65,  65,  65,  65,  64,  86,  65,  65,  65,  65,  65,  65,  65,  65,  86,  65,  64,  64,  65,  65,  65,  65,  64,  65,  65,  87,  86,  65,  65,  65,  65,  65,  65,  87,  65,  65,  65,  65,  65,  65,  64,  65,  86,  65,  64,  88,  65,  65,  65,  65,  86,  65,  65,  64,  64,  64,  65,  65,  88,  87,  87,  64,  65,  86,  86,  65,  65,  87,  64,  64,  65,  65]
client_rtt_rd_process=[ 187981,  188113,  189136,  188156,  187840,  186074,  189297,  189212,  190897,  186481,  187488,  186499,  189964,  187047,  189800,  186659,  187667,  187341,  187170,  187365,  188905,  199068,  186280,  187723,  185597,  194705,  187833,  186267,  188154,  188283,  187557,  187942,  189303,  187716,  187893,  186543,  186532,  189394,  186806,  189194,  185978,  186242,  190269,  184816,  189948,  189001,  186162,  188256,  185211,  188535,  188117,  188204,  188231,  188494,  187499,  187117,  187105,  186202,  187013,  187270,  188931,  195704,  187403,  187607,  188955,  185621,  194324,  189839,  187736,  186879,  187326,  189913,  186027,  187224,  185546,  188961,  189038,  185199,  186928,  187843,  187103,  187888,  185387,  187097,  186265,  186205,  187801,  197089,  187018,  188021,  188743,  185415,  186272,  188305,  187627,  186211,  186195,  187812,  187661,  186581]
client_c509_process_total=[ 200210,  203336,  204348,  201670,  200768,  199620,  201612,  204249,  200609,  201301,  202673,  202116,  199051,  203749,  202299,  203299,  206486,  203378,  200967,  196926,  202937,  203729,  202386,  199604,  203026,  199609,  202404,  203326,  197498,  208997,  202754,  202869,  201462,  200700,  200564,  203788,  206251,  203680,  200178,  203330,  203244,  199236,  205271,  207535,  203296,  202953,  200746,  205546,  206123,  194033,  198177,  200703,  204364,  198952,  204216,  198615,  207960,  202424,  203673,  202581,  198861,  202393,  198708,  201893,  206680,  202409,  202006,  200575,  205275,  198839,  200275,  205253,  198672,  202546,  201424,  198181,  202407,  200691,  201546,  197936,  204192,  202497,  205619,  202269,  199185,  196754,  200541,  203276,  207017,  200133,  203434,  203956,  204931,  202777,  208937,  205724,  200210,  201264,  202584,  205135]
client_veritfy=[ 188538,  191664,  192676,  189998,  189096,  187947,  189939,  192577,  188936,  189629,  191001,  190444,  187378,  192077,  190626,  191627,  194814,  191706,  189294,  185254,  191265,  192057,  190714,  187932,  191354,  187937,  190732,  191653,  185826,  197325,  191082,  191197,  189790,  189028,  188891,  192116,  194579,  192008,  188506,  191657,  191571,  187564,  193599,  195863,  191624,  191281,  189074,  193874,  194451,  182361,  186505,  189031,  192692,  187280,  192544,  186943,  196288,  190752,  192001,  190909,  187189,  190721,  187036,  190221,  195007,  190737,  190334,  188902,  193603,  187166,  188603,  193581,  187000,  190873,  189752,  186509,  190735,  189019,  189874,  186263,  192520,  190825,  193947,  190597,  187513,  185082,  188869,  191604,  195345,  188460,  191762,  192283,  193259,  191104,  197265,  194052,  188537,  189592,  190912,  193462]
rd_total_process=[171995, 171737, 171760, 171767, 171921, 171577, 171811, 171898, 171685, 171736, 171706, 171604, 171888, 171760, 171864, 171869, 171904, 171690, 171886, 171825, 171941, 171759, 171923, 171808, 171734, 171715, 171747, 171716, 171843, 171758, 171825, 171583, 171916, 171821, 172069, 171694, 171675, 171648, 171794, 171786, 171774, 171918, 171678, 171913, 171609, 171650, 171825, 171751, 171783, 171685, 171771, 171791, 171732, 171699, 171957, 171668, 171725, 171854, 171789, 171850, 171778, 171970, 171854, 171875, 171788, 171626, 172455, 172362, 171616, 171720, 171890, 171874, 171873, 171746, 171710, 171882, 171959, 171687, 171767, 171723, 171942, 171768, 171550, 171664, 171744, 171731, 171683, 171648, 171586, 171901, 171709, 171855, 171752, 171866, 171507, 171736, 171765, 171691, 171861, 171741]
rd_sign=[171738, 171480, 171503, 171511, 171664, 171320, 171555, 171641, 171428, 171480, 171449, 171347, 171632, 171503, 171608, 171612, 171647, 171433, 171629, 171568, 171684, 171503, 171666, 171552, 171478, 171459, 171491, 171460, 171587, 171501, 171569, 171326, 171659, 171565, 171813, 171438, 171418, 171391, 171538, 171529, 171517, 171661, 171421, 171658, 171352, 171393, 171568, 171494, 171527, 171428, 171514, 171534, 171475, 171442, 171701, 171411, 171468, 171598, 171532, 171594, 171521, 171714, 171598, 171618, 171532, 171370, 172198, 172106, 171360, 171463, 171635, 171617, 171617, 171489, 171454, 171626, 171702, 171431, 171511, 171467, 171685, 171512, 171294, 171407, 171487, 171475, 171427, 171392, 171329, 171645, 171453, 171598, 171495, 171609, 171250, 171480, 171508, 171434, 171604, 171484]

rd_process_module = [element1 - element2 for (element1, element2) in zip(rd_total_process, rd_sign)]
client_c509_module = [element1 - element2 for (element1, element2) in zip(client_c509_process_total, client_veritfy)]
rtt = [element1 - element2 for (element1, element2) in zip(client_rtt_rd_process, rd_total_process)]

rtt_sub = [element1 - element2 for (element1, element2) in zip(client_total_lookup_time, client_prepare_rqst)]
rtt_sub = [element1 - element2 for (element1, element2) in zip(rtt_sub, rd_total_process)]
rtt_sub = [element1 - element2 for (element1, element2) in zip(rtt_sub, client_c509_process_total)]

#print("mean rtt:",statistics.mean(rtt))
#print("mean rtt_sub:",statistics.mean(rtt_sub))

client_total_lookup_time = [x / 1000 for x in client_total_lookup_time]
client_prepare_rqst = [x / 1000 for x in client_prepare_rqst]
rd_process_module = [x / 1000 for x in rd_process_module]
rd_sign = [x / 1000 for x in rd_sign]
client_c509_module = [x / 1000 for x in client_c509_module]
client_veritfy = [x / 1000 for x in client_veritfy]
rtt_sub = [x / 1000 for x in rtt_sub]

print("mean client_total_lookup_time:",statistics.mean(client_total_lookup_time))
print("mean client_prepare_rqst:",statistics.mean(client_prepare_rqst))
print("mean rd_process_module:",statistics.mean(rd_process_module))
print("mean rd_sign:",statistics.mean(rd_sign))
print("mean client_c509_module:",statistics.mean(client_c509_module))
print("mean client_veritfy:",statistics.mean(client_veritfy))
print("mean rtt_sub:",statistics.mean(rtt_sub))


# Creating plot
fig, ax = plt.subplots()
columns = [client_total_lookup_time,client_prepare_rqst ,rtt_sub,rd_process_module,rd_sign,client_c509_module,client_veritfy]
ax.boxplot(columns, patch_artist=False, meanline=True, showmeans=True,notch=True)
ax.set_ylim(ymin=0)
plt.xticks([1, 2, 3, 4,5,6,7], ["total\nduration","prepare\nrequest","rtt","rd\nmodule","rd\nsign","client\nmodule","client\nverify"])

#plt.title('Total duration teardown with crypto-sw')
#plt.xlabel('Number of cert stored in rd')
plt.ylabel('time [ms]')

# show plot
plt.show() 